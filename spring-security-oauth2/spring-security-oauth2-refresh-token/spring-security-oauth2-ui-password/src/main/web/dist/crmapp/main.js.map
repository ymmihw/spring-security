{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/foo.component.ts","webpack:///./src/app/home.component.ts","webpack:///./src/app/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"/\">Spring Security Oauth - Password Flow</a>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>`\n})\n\nexport class AppComponent {}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {RouterModule} from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login.component';\nimport {HomeComponent} from './home.component';\nimport {FooComponent} from './foo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    FooComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'login', component: LoginComponent}])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Cookie } from 'ng2-cookies';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { map, catchError  } from 'rxjs/operators';\n\nexport class Foo {\n  constructor(\n    public id: number,\n    public name: string) { }\n}\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private _router: Router, private _http: Http) { }\n\n  obtainAccessToken(loginData) {\n    let params = new URLSearchParams();\n    params.append('username', loginData.username);\n    params.append('password', loginData.password);\n    params.append('grant_type', 'password');\n    params.append('client_id', 'fooClientId');\n    let h = { 'Content-type': 'application/x-www-form-urlencoded; charset=utf-8' };\n    let headers = new Headers(h);\n    let options = new RequestOptions({ headers: headers });\n    console.log(params.toString());\n    this._http.post('/oauth/token', params.toString(), options).pipe(\n      map(res => res.json()))\n      .subscribe(\n        data => this.saveToken(data),\n        () => alert('Invalid Credentials')\n      );\n  }\n\n\n  saveToken(token) {\n    let expireDate = new Date().getTime() + (1000 * token.expires_in);\n    Cookie.set(\"access_token\", token.access_token, expireDate);\n    console.log('Obtained Access token');\n    this._router.navigate(['/']);\n  }\n\n  getResource(resourceUrl): Observable<Foo> {\n    let headers = new Headers({ 'Content-type': 'application/x-www-form-urlencoded; charset=utf-8', 'Authorization': 'Bearer ' + Cookie.get('access_token') });\n    let options = new RequestOptions({ headers: headers });\n    return this._http.get(resourceUrl, options).pipe(\n      map((res: Response) => res.json()),\n      catchError((error: any) => Observable.throw(error.json().error || 'Server error')));\n  }\n\n  checkCredentials() {\n    if (!Cookie.check('access_token')) {\n      this._router.navigate(['/login']);\n    }\n  }\n\n  logout() {\n    Cookie.delete('access_token');\n    this._router.navigate(['/login']);\n  }\n}","import { Component } from '@angular/core';\nimport { AppService, Foo } from './app.service';\n\n@Component({\n    selector: 'foo-details',\n    providers: [AppService],\n    template: `<div class=\"container\">\n    <h1 class=\"col-sm-12\">Foo Details</h1>\n    <div class=\"col-sm-12\">\n        <label class=\"col-sm-3\">ID</label> <span>{{foo.id}}</span>\n    </div>\n    <div class=\"col-sm-12\">\n        <label class=\"col-sm-3\">Name</label> <span>{{foo.name}}</span>\n    </div>\n    <div class=\"col-sm-12\">\n        <button class=\"btn btn-primary\" (click)=\"getFoo()\" type=\"submit\">New Foo</button>        \n    </div>\n</div>`\n})\n\nexport class FooComponent {\n    public foo = new Foo(1, 'sample foo');\n    private foosUrl = '/foos/';\n\n    constructor(private _service: AppService) { }\n\n    getFoo() {\n        this._service.getResource(this.foosUrl + this.foo.id)\n            .subscribe(\n                data => this.foo = data,\n                () => this.foo.name = 'Error');\n    }\n}\n","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'home-header',\n  providers: [AppService],\n  template: `<div class=\"container\" >\n    <div class=\"content\">\n        <span>Welcome !!</span>\n        <a class=\"btn btn-default pull-right\"(click)=\"logout()\" href=\"#\">Logout</a>\n    </div>\n    <foo-details></foo-details>\n</div>`\n})\n\nexport class HomeComponent {\n\n  constructor(\n    private _service: AppService) { }\n\n  ngOnInit() {\n    this._service.checkCredentials();\n  }\n\n  logout() {\n    this._service.logout();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Component({\n    selector: 'login-form',\n    providers: [AppService],\n    template: `\n    <div class=\"col-sm-6\">\n        <h1>Login</h1>\n        <div class=\"col-sm-12 form-group\">\n             <label>Username</label>\n             <input class=\"form-control\" type=\"text\" [(ngModel)]=\"loginData.username\" />\n        </div>\n        <div class=\"col-sm-12 form-group\">\n            <label>Password</label>\n            <input class=\"form-control\" type=\"password\"  [(ngModel)]=\"loginData.password\"/>\n        </div>\n        <div class=\"col-sm-12\">\n            <button class=\"btn btn-primary pull-right\" (click)=\"login()\" type=\"submit\">Login</button>\n        </div>\n    </div>`\n})\nexport class LoginComponent {\n    public loginData = { username: '', password: '' };\n\n    constructor(private _service: AppService) { }\n\n    login() {\n        this._service.obtainAccessToken(this.loginData);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}